---
interface Props {
  currentPage: string;
}

const { currentPage } = Astro.props;

const applicationComponents = [
  { id: 'graduate-application', title: 'Application & Fee', href: '/academics/graduate/admissions/graduate-application/' },
  { id: 'letters-of-recommendation', title: 'Letters of Recommendation', href: '/academics/graduate/admissions/letters-of-recommendation/' },
  { id: 'transcripts', title: 'Transcripts', href: '/academics/graduate/admissions/transcripts/' },
  { id: 'academic-and-personal-statements', title: 'Academic & Personal Statements', href: '/academics/graduate/admissions/academic-and-personal-statements/' },
  { id: 'resume-curriculum-vitae', title: 'Resum√©/CV', href: '/academics/graduate/admissions/resume-curriculum-vitae/' },
  { id: 'english-proficiency-test-scores', title: 'English Proficiency', href: '/academics/graduate/admissions/english-proficiency-test-scores/' }
];
---

<nav class="surface-secondary p-2 rounded-md border-maize mb-8" aria-label="Graduate Application Components">
  <h2 class="not-prose mt-0 text-sm font-semibold mb-3">Graduate application components</h2>
  <div class="flex flex-wrap gap-2">
    {applicationComponents.map(component => (
      <a 
        href={component.href}
        class={`px-3 py-1 rounded-sm text-xs font-medium transition-colors duration-200 ${
          currentPage === component.id 
            ? 'bg-maize !text-umichblue font-semibold' 
            : 'bg-gray-200 !text-gray-800'
        }`}
        aria-current={currentPage === component.id ? 'page' : undefined}
      >
        {component.title}
      </a>
    ))}
  </div>
</nav>