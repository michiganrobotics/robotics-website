---
import Hero from "../components/Hero.astro";
import MainLayout from "../layouts/MainLayout.astro";
import SocialFeed from '../components/SocialFeed.astro';
import { getCollection } from 'astro:content';
import { eventsQuery } from "../lib/api";
import EmailSignup from "../components/EmailSignup.astro";
import { Image, getImage } from "astro:assets";
import academicsImage from '../images/homepage/homepage-academics.jpg';
import researchImage from '../images/homepage/homepage-research.jpg';
import peopleImage from '../images/homepage/homepage-people.jpg';
import ContentImage from '../components/ContentImage.astro';
import Link from '../components/Link.astro';
import { Icon } from 'astro-icon/components';

// Add these type definitions at the top of the file
interface Event {
  id: string;
  permalink: string;
  event_title: string;
  event_subtitle: string;
  styled_images: {
    event_feature_large: string;
  };
  image_description: string;
  datetime_start: string;
  description: string;
}


// Helper functions for news items
function isCollegeNews(post: any) {
  return post.collection === 'collegeNews';
}

function getPostLink(post: any) {
  if (isCollegeNews(post)) {
    return post.data.link;
  }
  return `/news/${new Date(post.data.date).getFullYear()}/${post.id.split('/')[1]}`;
}

function getExcerptText(post: any): string {
  if (isCollegeNews(post)) {
    return post.data.description || '';
  }
  return post.data.excerpt || post.data.seoDescription || '';
}

// Get all news posts and sort by date
const allPosts = await getCollection('news');
const collegeNewsItems = await getCollection('collegeNews', ({ data }) => data.featured !== false);

// Convert college news items to match news post format
const formattedCollegeNews = collegeNewsItems.map(item => ({
  id: `college/${item.id}`,
  collection: 'collegeNews' as const,
  data: {
    title: item.data.title,
    date: item.data.date,
    description: item.data.description,
    link: item.data.link,
    categories: item.data.categories || [],
    image: item.data.image,
    featured: item.data.featured
  }
}));

// Combine and sort all news items
const allNewsItems = [...allPosts, ...formattedCollegeNews].sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const recentPosts = allNewsItems.slice(0, 3);
const eventsData = await eventsQuery();
const recentEvents = eventsData.slice(0, 3);

Astro.response.headers.set('Cache-Control', 'public, max-age=86400, must-revalidate');
const videoMp4Path = '/robotics-promo-2025-2.mp4';
const videoWebmPath = '/robotics-promo-2025-2.webm';

---

<MainLayout title='Michigan Robotics | University of Michigan'>
	<Fragment slot="head">
		<link
		rel="preload"
		as="image"
		fetchpriority="high"
		href="/blue-tile.png"
		type="image/png"
		/>

	  </Fragment>
	<main class="preload-visible">
		<Hero videoMp4Path={videoMp4Path} videoWebmPath={videoWebmPath}></Hero>
		<div class="mx-2 m-auto mb-4 md:mx-12">
			<div class="block md:hidden font-roboto-condensed relative mb-16 m-auto 
                        bg-umichblue dark:bg-arboretumBlue
                        overflow-visible rounded-sm p-6
                        shadow-lg text-neutral-50 text-xl -mt-8
                        border border-white/20 backdrop-blur-sm">
				The <strong>Robotics Department</strong> at the <strong>University of Michigan</strong> is creating the next generation of robotics and roboticists as force-multipliers for the benefit of society. 
			</div>

			<div class="relative mb-16 section-with-gradient-border border-arboretumBlue before:from-arboretumBlue after:from-arboretumBlue">
				<div class="flex justify-center mb-2 sm:mb-0">
					<h2 id="latest-news" class="absolute -top-6 z-10 bg-arboretumBlue text-neutral-50 px-6 py-2 rounded-sm text-3xl font-bold"><a href="/news" class="underline-hover-only">Latest news</a></h2>
				</div>
				<div class="flex flex-wrap gap-4 justify-center mb-8 md:flex-nowrap pt-10 px-2">
					{recentPosts.map(async (post, index) => {
						const postImage = post.data.image?.src ? await getImage({
							src: post.data.image.src,
							width: 450,
							height: 192,
						}) : null;

						const excerpt = getExcerptText(post);

						return (
							
							<Link 
								href={getPostLink(post)}
								class="no-underline group card-base surface md:flex-1 max-w-md border border-arboretumBlue"
								target={isCollegeNews(post) ? '_blank' : undefined}
								rel={isCollegeNews(post) ? 'noopener noreferrer' : undefined}
							>
								{postImage ? (
									<Image 
										src={postImage.src}
										alt={post.data.image?.alt || post.data.title}
										width={450}
										height={192}
										class="w-full h-48 object-cover"
										loading="eager"
									/>
								) : null}
								<div class="relative group">
									<div class="p-4">
										<div class="bg-arboretumBlue text-neutral-50 dark:text-neutral-200 p-2 pl-4 -ml-4">
											<h3 class="text-xl font-roboto grid grid-cols-[1fr_auto] items-center gap-1">
												{isCollegeNews(post) ? (
													<>
														<span>{post.data.title}</span>
														<Icon name="mdi:open-in-new" class="w-4 h-4" />
													</>
												) : post.data.title}
											</h3>
											<span class="maize-underline" />
										</div>
										<div class="mt-4 text-gray-600 dark:text-neutral-200">
											<p class="text-sm italic font-sans text-arboretumBlue dark:text-neutral-300">
												{new Date(post.data.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}
											</p>
											<p class="line-clamp-3 text-sm" set:html={excerpt} />
										</div>
									</div>
								</div>
							</Link>
						);
					})}
				</div>
			</div>

			<div class="relative mb-16 section-with-gradient-border border-rackhamGreen before:from-rackhamGreen after:from-rackhamGreen">
				<div class="flex justify-center mb-12 sm:mb-0">
					<h2 class="absolute -top-6 z-10 bg-rackhamGreen text-neutral-50 px-6 py-2 rounded-sm text-3xl font-bold"><a href="/about" class="underline-hover-only">Get to know Michigan Robotics</a></h2>
				</div>
				<div class="flex flex-wrap gap-4 justify-center mb-8 md:flex-nowrap pt-10 px-2">
					{[
						{
							image: academicsImage,
							alt: "Academics at Michigan Robotics",
							title: "Graduate and undergrad programs",
							href: "/academics"
						},
						{
							image: researchImage, 
							alt: "Research at Michigan Robotics",
							title: "Explore robotics research",
							href: "/research"
						},
						{
							image: peopleImage,
							alt: "People at Michigan Robotics",
							title: "Find cross-disciplinary roboticists", 
							href: "/people"
						}
					].map(item => (
						<figure class="group min-w-[50%] md:min-w-[auto] flex-auto relative max-w-md rounded-sm shadow-md hover:shadow-lg transition-all duration-300 border-rackhamGreen border">
							<Link href={item.href} class="block">
								<div class="overflow-hidden">
									<Image 
										src={item.image}
										alt={item.alt}
										width={450}
										height={192}
										class="w-full h-auto md:h-auto object-cover aspect-[2/1] md:aspect-auto transition-all duration-500 group-hover:scale-105"
										loading="lazy"
									/>
								</div>
								<div class="absolute inset-x-0 bottom-0 bg-rackhamGreen/90 p-4">
									<h3 class="text-lg font-bold leading-tight text-neutral-50 dark:text-neutral-200">
										{item.title}
										<span class="block w-0 h-0.5 bg-maize transition-all duration-300 group-hover:w-full" />
									</h3>
								</div>
							</Link>
						</figure>
					))}
				</div>
			</div>
		
			{recentEvents.length > 0 && (
				<div class="relative mb-16 section-with-gradient-border border-matthaeiViolet before:from-matthaeiViolet after:from-matthaeiViolet">
				  <h2 class="absolute -top-6 left-1/2 transform -translate-x-1/2 z-10 bg-matthaeiViolet text-neutral-50 px-6 py-2 rounded-sm text-3xl font-bold"><a href="/events" class="underline-hover-only">Events</a></h2>		
				  <div class="cards-container">	
					{recentEvents.map((event: Event) => (
					  <a 
						key={event.id} 
						class='post-link no-underline group card-base surface border border-matthaeiViolet w-96'
						href={event.permalink} 
						aria-label={event.event_title}
					  >
						<section>
						  <Image
							class="rounded-t-sm aspect-video object-cover w-full"
							src={event.styled_images.event_feature_large} 
							alt={event.image_description}
							height={300}
							width={446}
							loading='lazy'
						  />
						  <div class="p-5 pl-0">
							<div class="mb-3 text-sm italic bg-matthaeiViolet text-neutral-200 inline-block pl-5 pr-2 py-1">
							  <time datetime={event.datetime_start}>
								{new Date(event.datetime_start.replace(
								  /(\d{4})(\d{2})(\d{2})T(\d{2})(\d{2})(\d{2})/,
									"$1-$2-$3T$4:$5:$6"
								  )).toLocaleString('en-US', {
									month: 'long',
									day: 'numeric',
									year: 'numeric',
									hour: 'numeric',
									minute: '2-digit',
									hour12: true
								  })}
							  </time>
							</div> 
							<h3 class="pl-5 mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-neutral-200">
							  {event.event_title}
							  <span class="block w-0 h-0.5 bg-maize transition-all duration-300 group-hover:w-full" />
							</h3>
							<h4 class="pl-5 mb-2 text-lg tracking-tight text-gray-900 dark:text-neutral-300">{event.event_subtitle}</h4>  
						</section>
					  </a>
					))}
				  </div>
				</div>
			  )}
			      <SocialFeed />
				  <EmailSignup />
		</div>
	</main>
</MainLayout>