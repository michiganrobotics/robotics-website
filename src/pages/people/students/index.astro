---
import { Image } from 'astro:assets';
import Layout from '../../../layouts/MainLayout.astro';
import { getStudentData } from '../../../lib/googleSheets';
import { Icon } from "astro-icon/components";
import Breadcrumbs from "../../../components/Breadcrumbs.astro";
import PageTitle from "../../../components/PageTitle.astro";
import featuredImage from "../../../images/featured-images/people-students.jpg";
import ogFeatureImage from "../../../images/featured-images/og/people-students.jpg";

// Update the image import to include the default export
const cachedImages = import.meta.glob('/src/images/cached-profiles/*.jpg', { eager: true, import: 'default' });
const defaultProfileImage = await import('../../../images/profile-images/robot-profile.jpg');

const students = await getStudentData();
// Add null checks and fallbacks for sorting
students.sort((a, b) => {
  const lastNameA = a.lastName || a.preferredFullName || '';
  const lastNameB = b.lastName || b.preferredFullName || '';
  return lastNameA.localeCompare(lastNameB);
});
---

<Layout title="Students | Michigan Robotics" description="University of Michigan Robotics students who are advancing the field of robotics." image={ogFeatureImage.src}>
  <main>
    <Breadcrumbs />
    <PageTitle title="Students" image={featuredImage} imageAlt="A silhouette of a student working in the Robotics Building" imagePosition="15% 70%" />
    <div class="prose dark:prose-invert mt-4 mb-4 max-w-6xl w-11/12 mx-auto">
      <div class="not-prose mb-6 flex flex-col sm:flex-row gap-4">
        <input 
          type="text" 
          id="studentSearch" 
          placeholder="Search by name, research interests, or lab..." 
          class="search-bar"
          aria-label="Search for students by name, research interests, or lab"
        >
        <div class="flex gap-4">
          <select id="degreeFilter" class="w-full sm:w-auto p-2 pl-2 pr-6 sm:pr-8 sm:pl-4 border border-neutral-400 dark:border-arboretumBlue bg-[var(--bg-undersurface-light)] dark:bg-[var(--bg-page-dark)] text-neutral-700 dark:text-neutral-100 rounded-md">
            <option value="">Academic program</option>
            <option value="PhD">PhD</option>
            <option value="MS">Master's</option>
          </select>
          <select id="statusFilter" class="w-full sm:w-auto p-2 px-2 sm:px-4 border border-neutral-400 dark:border-arboretumBlue bg-[var(--bg-undersurface-light)] dark:bg-[var(--bg-page-dark)] text-neutral-700 dark:text-neutral-100 rounded-md">
            <option value="">Work availability</option>
            <option value="seeking internship">Seeking internship</option>
            <option value="seeking employment">Seeking employment</option>
          </select>
        </div>
      </div>

      <div id="studentGrid" class="not-prose grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {students.map((student) => (
          <div class="student-card surface card-base p-4 border border-arboretumBlue/20 dark:border-arboretumBlue/30" 
               data-degree={student.degree}
               data-status={student.jobSeekingStatus}>
            <div class="flex flex-col">
              <div class="flex items-center gap-4 mb-3">
                {student.profileImage ? (
                  <Image
                    src={cachedImages[student.profileImage] || defaultProfileImage.default}
                    alt={`${student.preferredFullName}'s profile photo`}
                    width={256}
                    height={256}
                    class="w-16 h-16 rounded-full object-cover bg-gray-100 dark:bg-gray-700"
                  />
                ) : (
                  <Image
                    src={defaultProfileImage.default}
                    alt="Default profile photo"
                    width={256}
                    height={256}
                    class="w-16 h-16 rounded-full object-cover bg-gray-100 dark:bg-gray-700"
                  />
                )}
                <div>
                  <h2 class="text-lg font-bold text-umichblue dark:text-neutral-50">
                    {student.preferredFullName}
                  </h2>
                  <p class="text-sm text-arboretumBlue dark:text-neutral-200">
                    {student.degree} Student
                  </p>
                </div>
              </div>

              <div class="flex flex-wrap gap-2 mt-1">
                {student.jobSeekingStatus && student.jobSeekingStatus !== 'not currently seeking' && (
                  <span class="inline-flex px-2 py-1 text-xs rounded-full bg-arboretumBlue dark:bg-arboretumBlue/80 text-neutral-100">
                    {student.jobSeekingStatus === 'seeking internship' ? 'Seeking internship' : 'Seeking employment'}
                  </span>
                )}
                {student.outreachAmbassador && (
                  <a href="/news/2024/robotics-outreach-ambassadors-of-2024/"
                     class="no-underline inline-flex items-center gap-1 px-2 py-1 text-xs rounded-full bg-maize text-umichblue hover:bg-maize/80 transition-colors whitespace-normal">
                    <Icon name="mdi:star" class="w-4 h-4 flex-shrink-0" />
                    <span class="inline-block">Outreach Ambassador</span>
                  </a>
                )}
              </div>

              <div class="space-y-3 mt-4">
                {student.researchGroup && (
                  <div>
                    <span class="text-xs uppercase tracking-wider text-neutral-600 dark:text-neutral-300">Research Group</span>
                    <p class="text-sm text-neutral-600 dark:text-neutral-300">{student.researchGroup}</p>
                  </div>
                )}

                {student.advisors && (
                  <div>
                    <span class="text-xs uppercase tracking-wider text-neutral-600 dark:text-neutral-300">Advisor{student.advisors.includes(',') ? 's' : ''}</span>
                    <p class="text-sm text-neutral-600 dark:text-neutral-300">{student.advisors}</p>
                  </div>
                )}

                {student.researchInterests && (
                  <div>
                    <span class="text-xs uppercase tracking-wider text-neutral-600 dark:text-neutral-300">Research Interests</span>
                    <p class="text-sm text-neutral-600 dark:text-neutral-300">{student.researchInterests}</p>
                  </div>
                )}
              </div>

              <div class="flex gap-3 mt-4 flex-wrap items-center">
                {student.email && (
                  <a href={`mailto:${student.email}`}
                     class="text-neutral-600 dark:text-neutral-300 hover:text-arboretumBlue dark:hover:text-taubmanTeal"
                     title="Email">
                    <Icon name="mdi:email" class="w-5 h-5" />
                  </a>
                )}
                {student.website && (
                  <a href={student.website}
                     target="_blank"
                     rel="noopener noreferrer"
                     class="text-neutral-600 dark:text-neutral-300 hover:text-arboretumBlue dark:hover:text-taubmanTeal"
                     title="Website">
                    <Icon name="mdi:web" class="w-5 h-5" />
                  </a>
                )}
                {student.googleScholar && (
                  <a href={student.googleScholar}
                     target="_blank"
                     rel="noopener noreferrer"
                     class="text-neutral-600 dark:text-neutral-300 hover:text-arboretumBlue dark:hover:text-taubmanTeal"
                     title="Google Scholar">
                    <Icon name="mdi:school" class="w-5 h-5" />
                  </a>
                )}
                {student.github && (
                  <a href={student.github}
                     target="_blank"
                     rel="noopener noreferrer"
                     class="text-neutral-600 dark:text-neutral-300 hover:text-arboretumBlue dark:hover:text-taubmanTeal"
                     title="GitHub">
                    <Icon name="mdi:github" class="w-5 h-5" />
                  </a>
                )}
                {student.linkedin && (
                  <a href={student.linkedin}
                     target="_blank"
                     rel="noopener noreferrer"
                     class="text-neutral-600 dark:text-neutral-300 hover:text-arboretumBlue dark:hover:text-taubmanTeal"
                     title="LinkedIn">
                    <Icon name="mdi:linkedin" class="w-5 h-5" />
                  </a>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>

      <p class="text-sm text-neutral-600 dark:text-neutral-300 mt-8 italic">
        Note: This directory is opt-in and does not represent all students currently enrolled. Current graduate students: <a href="https://docs.google.com/spreadsheets/d/1f7zkbOIKgNURCmXfjXHyyUz4r6cBaM8609zCRGRGhY0/edit?usp=sharing" target="_blank" rel="noopener noreferrer">update or add your profile to this directory</a>.
      </p>
    </div>
  </main>
</Layout>
<style>
  select {
    background-color: var(--bg-undersurface-light);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath fill='%23666' d='M4 6h8L8 11z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    padding-right: 2rem !important;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
  @media (prefers-color-scheme: dark) {
    select {
      background-color: var(--bg-page-dark);
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath fill='%23FFCB05' d='M4 6h8L8 11z'/%3E%3C/svg%3E");
    }
  }
</style>
<script>
  const searchInput = document.getElementById('studentSearch') as HTMLInputElement;
  const degreeFilter = document.getElementById('degreeFilter') as HTMLSelectElement;
  const statusFilter = document.getElementById('statusFilter') as HTMLSelectElement;
  const studentCards = document.querySelectorAll('.student-card');

  function filterStudents() {
    const searchTerm = searchInput.value.toLowerCase();
    const degreeValue = degreeFilter.value;
    const statusValue = statusFilter.value;

    studentCards.forEach((card) => {
      const textContent = card.textContent?.toLowerCase() || '';
      const degree = card.getAttribute('data-degree');
      const status = card.getAttribute('data-status');

      const matchesSearch = textContent.includes(searchTerm);
      const matchesDegree = !degreeValue || degree === degreeValue;
      const matchesStatus = !statusValue || status === statusValue;

      const matches = matchesSearch && matchesDegree && matchesStatus;
      (card as HTMLElement).style.display = matches ? '' : 'none';
    });
  }

  searchInput.addEventListener('input', filterStudents);
  degreeFilter.addEventListener('change', filterStudents);
  statusFilter.addEventListener('change', filterStudents);
</script> 