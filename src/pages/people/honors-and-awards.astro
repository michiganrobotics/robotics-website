---
// src/pages/focus-areas/index.astro
import Layout from '../../layouts/MainLayout.astro';
import { Image } from 'astro:assets';
import Breadcrumbs from "../../components/Breadcrumbs.astro";
import PageTitle from "../../components/PageTitle.astro";
import { getAwards } from '../../lib/googleSheets';
import { getFacultyData } from '../../lib/googleSheets';
import { getStaffData } from '../../lib/googleSheets';
import featureImage from '../../images/featured-images/people-honors-and-awards.jpg';
import ogFeatureImage from '../../images/featured-images/og/people-honors-and-awards.jpg';
import Link from '../../components/Link.astro';

const faculty = await getFacultyData();
const staff = await getStaffData();

const awards = await getAwards();

// Update the matching logic to handle multiple recipients
const matchedAwards = awards.map(award => {
  const recipients = award.awardRecipient.split('\n');
  const matchedRecipients = recipients.map(recipient => {
    const matchedFaculty = faculty.find(profile => profile.fullName === recipient.trim());
    const matchedStaff = staff.find(profile => profile.fullName === recipient.trim());
    
    if (matchedFaculty) {
      return {
        name: recipient.trim(),
        profileUrl: `faculty/${matchedFaculty.slug}`,
        profileType: 'faculty'
      };
    } else if (matchedStaff) {
      return {
        name: recipient.trim(),
        profileUrl: `staff/${matchedStaff.slug}`,
        profileType: 'staff'
      };
    } else {
      return {
        name: recipient.trim(),
        profileUrl: null,
        profileType: null
      };
    }
  });

  return {
    ...award,
    recipients: matchedRecipients
  };
});

---

<Layout title="Honors & Awards | Michigan Robotics" image={ogFeatureImage.src} description="Faculty and staff have been recognized for their achievements in a variety of ways, including awards and fellowships.">
    <Breadcrumbs />
    <PageTitle title="Honors and Awards" image={featureImage} imageAlt="A gigantic U-M flag is waved in the Big House football stadium" />
   
      <div class="prose dark:prose-invert mt-8 mb-4 max-w-6xl w-11/12 mx-auto">
        <div class="mb-8 mt-8 relative">
          <h2 class="text-xl font-roboto text-gray-800 dark:text-gray-200 leading-relaxed not-prose italic tracking-wide">
            Recognition for leading innovative initiatives, robust programs, and discovering new paths</h2>
          <div class="subtitle-double-line"></div>
        </div>
        <p>Michigan Robotics faculty and staff have been recognized for their achievements in a variety of ways, including awards, grants, and fellowships. We are proud of our community members, who earn everything from a NSF Career Award to being elected to the National Academy of Engineering member.</p>
        <div class="mb-4">
          <input 
            type="text" 
            id="searchInput" 
            placeholder="Search awards..." 
            class="search-bar"
            aria-label="Search awards"
          />
        </div>
        <div class="relative">
          <div class="overflow-x-auto shadow-md">
            <table class="w-full text-sm text-left border border-arboretumBlue dark:border-maize mt-0">
              <thead class="text-xs uppercase page-bg">
                <tr>
                  <th scope="col" class="px-4 py-3 cursor-pointer border-r" data-sort="name">
                    Award Recipient
                    <span class="ml-1">↕</span>
                  </th>
                  <th scope="col" class="px-4 py-3 cursor-pointer border-r" data-sort="awardYear">
                    Award Year
                    <span class="ml-1">↕</span>
                  </th>
                  <th scope="col" class="px-4 py-3 cursor-pointer border-r" data-sort="award">
                    Award
                    <span class="ml-1">↕</span>
                  </th>
                  <th scope="col" class="px-4 py-3 cursor-pointer" data-sort="awardOrganization">
                    Award Organization
                    <span class="ml-1">↕</span>
                  </th>
                </tr>
              </thead>
              <tbody>
                {matchedAwards.map((award) => (
                  <tr class="bg-[var(--bg-undersurface-light)] dark:bg-[var(--bg-undersurface-dark)] border-b border-gray-200 dark:border-gray-700 hover:bg-[var(--bg-surface-hover)] dark:hover:bg-[var(--bg-surface-hover-dark)]">
                    <th scope="row" class="px-6 py-4 font-medium border-r">
                      {award.recipients.map((recipient, index) => (
                        <>
                          {recipient.profileUrl ? (
                            <Link href={`/people/${recipient.profileUrl}`} class="hover:underline">
                              {recipient.name}
                            </Link>
                          ) : (
                            recipient.name
                          )}
                          {index < award.recipients.length - 1 && <br />}
                        </>
                      ))}
                    </th>
                    <td class="px-6 py-4 border-r" role="cell">
                      {award.awardYear}
                    </td>
                    <td class="px-6 py-4 border-r" role="cell">
                      {award.award}
                    </td>
                    <td class="px-6 py-4" role="cell">
                      {award.awardOrganization}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
          <script>
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            const tableRows = document.querySelectorAll('tbody tr');
            
            searchInput.addEventListener('keyup', function(e) {
              const searchTerm = e.target.value.toLowerCase();
              
              tableRows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
              });
            });

            // Sorting functionality
            const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;
            
            const comparer = (idx, asc) => (a, b) => {
              const v1 = getCellValue(a, idx);
              const v2 = getCellValue(b, idx);
              return v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) 
                ? (asc ? 1 : -1) * (Number(v1) - Number(v2))
                : (asc ? 1 : -1) * v1.toString().localeCompare(v2);
            };
            
            document.querySelectorAll('th[data-sort]').forEach(th => {
              let asc = true;
              th.addEventListener('click', () => {
                const table = th.closest('table');
                const tbody = table.querySelector('tbody');
                const columnIndex = Array.from(th.parentNode.children).indexOf(th);
                
                // Update sort indicators
                th.parentNode.querySelectorAll('th').forEach(header => {
                  if (header.querySelector('span')) {
                    header.querySelector('span').textContent = '↕';
                  }
                });
                th.querySelector('span').textContent = asc ? '↑' : '↓';
                
                Array.from(tbody.querySelectorAll('tr'))
                  .sort(comparer(columnIndex, asc))
                  .forEach(tr => tbody.appendChild(tr));
                
                asc = !asc;
              });
            });
          </script>