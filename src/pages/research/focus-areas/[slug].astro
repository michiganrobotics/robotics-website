---
import Layout from '../../../layouts/MainLayout.astro';
import { getCollection, render } from 'astro:content';
import { Image, getImage } from 'astro:assets';
import ContentImage from '../../../components/ContentImage.astro';
import Breadcrumbs from "../../../components/Breadcrumbs.astro";
import Link from '../../../components/Link.astro';
import { components } from '../../../components/components';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
  const focusAreaEntries = await getCollection('focusAreas');
  return focusAreaEntries.map(entry => ({
    params: { slug: entry.id },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Get related news posts based on matching category
const allAreaPosts = await getCollection('news', ({ data }) => {
  if (!data.categories || !data.categories.length) return false;
  return data.categories.some(cat => cat === entry.id);
});

// Get related college news posts
const collegeNewsPosts = await getCollection('collegeNews', ({ data }) => {
  if (!data.categories || !data.categories.length) return false;
  return data.categories.some(cat => cat === entry.id);
});

// Format college news posts to match structure
const formattedCollegeNews = collegeNewsPosts.map(item => ({
  id: `college/${item.id}`,
  collection: 'collegeNews' as const,
  data: {
    title: item.data.title,
    date: item.data.date,
    image: item.data.image,
    link: item.data.link
  }
}));

// Combine and sort all related posts by date
const allRelatedPosts = [...allAreaPosts, ...formattedCollegeNews]
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Helper function to determine if a post is college news
function isCollegeNews(post: any) {
  return post.collection === 'collegeNews';
}

// Helper function to get post link
function getPostLink(post: any) {
  if (isCollegeNews(post)) {
    return post.data.link;
  }
  return `/news/${new Date(post.data.date).getFullYear()}/${post.id.split('/')[1]}`;
}

// Get focus areas collection to ensure consistent image handling
const focusAreas = await getCollection('focusAreas');
const areaData = focusAreas.find(area => area.id === entry.id)?.data;
const areaImage = areaData?.image?.src || null;
const areaImageAlt = areaData?.image?.alt || null;

const relatedPosts = allAreaPosts
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
---

<Layout 
  title={`${entry.data.title} | Michigan Robotics`} 
  description={entry.data.description} 
  image={areaImage ? areaImage.src : undefined}
  imageAlt={areaImageAlt}
>
    <Breadcrumbs />
  <div class="max-w-6xl w-11/12 mx-auto pt-4 pb-12">
    <div class="relative rounded-lg overflow-hidden shadow-2xl">
      <div class="absolute inset-0">
        {areaImage && (
          <Image 
            src={areaImage}
            alt={areaImageAlt || entry.data.title}
            class="w-full h-full object-cover"
          />
        )}
        <div class="absolute inset-0 bg-gradient-to-r from-gray-900 via-gray-900/70 to-transparent" />
      </div>
      
      <div class="relative px-8 py-16">
        <h1 class="text-4xl font-bold text-white mb-4">
          {entry.data.title}
        </h1>
        <p class="text-xl text-gray-200 max-w-2xl">
          {entry.data.description}
        </p>
      </div>
    </div>
    <div class="max-w-6xl mx-auto mt-12">
      <article class="prose prose-lg dark:prose-invert max-w-none">
        <Content components={components} />

        {/* Related News Section */}
        {allRelatedPosts.length > 0 && (
          <div class="mt-12">
            <h2 class="text-2xl font-bold mb-4 font-roboto-condensed">Related news</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {allRelatedPosts.slice(0, 6).map(async (post) => {
                const postImage = post.data.image?.src ? await getImage({
                  src: post.data.image.src,
                  width: 450,
                  height: 300,
                }) : null;

                return (
                  <div class="surface card-base">
                    <Link 
                      href={getPostLink(post)}
                      class="group no-underline not-prose"
                      target={isCollegeNews(post) ? '_blank' : undefined}
                      rel={isCollegeNews(post) ? 'noopener noreferrer' : undefined}
                    >
                      <div class="relative aspect-video overflow-hidden rounded-sm not-prose">
                        {postImage ? (
                          <Image 
                            src={postImage.src}
                            alt={post.data.image?.alt || post.data.title}
                            width={450}
                            height={300}
                            class="w-full h-full object-cover image-hover"
                          />
                        ) : null}
                      </div>
                      <div class="p-4">
                        <h3 class="not-prose text-lg font-medium group-hover:decoration-maize group-hover:decoration-2 group-hover:underline">
                          {post.data.title}
                          {isCollegeNews(post) && <Icon name="mdi:open-in-new" class="inline w-4 h-4 ml-1" />}
                        </h3>
                      </div>
                    </Link>
                  </div>
                );
              })}
            </div>
            
            {allRelatedPosts.length > 6 && (
              <div class="mt-8 text-right not-prose">
                <a 
                  href={`/news/${entry.id}`}
                  class="inline-flex items-center justify-center text-base sm:text-lg w-full sm:w-auto 
                    bg-umichblue text-white dark:bg-arboretumBlue dark:text-white 
                    px-4 sm:px-6 py-2.5 sm:py-3 rounded-md 
                    hover:bg-umichblue/90 dark:hover:bg-arboretumBlue/90 
                    transform hover:-translate-y-0.5 
                    transition-all duration-200 
                    shadow-md hover:shadow-lg 
                    focus:outline-none focus:ring-3 focus:ring-offset-2 focus:ring-umichblue dark:focus:ring-arboretumBlue
                    no-underline button-component
                    whitespace-normal break-words"
                >
                  <span class="flex-1 text-center">View more {entry.data.title.toLowerCase()} news</span>
                  <svg 
                    class="flex-shrink-0 ml-2 -mr-1 w-4 h-4" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24" 
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path 
                      stroke-linecap="round" 
                      stroke-linejoin="round" 
                      stroke-width="2" 
                      d="M9 5l7 7-7 7"
                    ></path>
                  </svg>
                </a>
              </div>
            )}
          </div>
        )}
      </article>
    </div>
  </div>
</Layout>
